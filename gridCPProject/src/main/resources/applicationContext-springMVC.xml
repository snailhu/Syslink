<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 开始spring mvc的注解 -->
 	<mvc:annotation-driven/> 
 	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="GridCP.core.controller" />
	
	<mvc:annotation-driven/>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">      
           <property name="messageConverters">      
               <list >      
                   <ref bean="mappingJacksonHttpMessageConverter" />      
               </list>      
           </property>      
       </bean>
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>  
    
	<!-- 统一异常处理类 -->
	<bean id="handlerExceptionResolver"
		class="GridCP.core.exception.ExceptionResolverCustom">
		<!-- 注入一个json转换器 -->
		<property name="mappingJacksonHttpMessageConverter" ref="mappingJacksonHttpMessageConverter" />
	</bean>
	<!-- 设置使用注解的类所在的jar包 -->
	<context:component-scan base-package="GridCP.core.controller"></context:component-scan>
	<!-- 处理器映射器和适配器，可以使用mvc注解驱动 -->
    <mvc:annotation-driven/>
	
	
	<!-- 视图解析器 
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>-->
		<!-- freemarker 模板继承支持 -->
	<bean id="blockDirective"
		class="cn.org.rapid_framework.freemarker.directive.BlockDirective" />
	<bean id="extendsDirective"
		class="cn.org.rapid_framework.freemarker.directive.ExtendsDirective" />
	<bean id="overrideDirective"
		class="cn.org.rapid_framework.freemarker.directive.OverrideDirective" />
	<bean id="superDirective"
		class="cn.org.rapid_framework.freemarker.directive.SuperDirective" />
	

	<!-- Freemarker配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
				
			</props>
		</property>
		
		<property name="freemarkerVariables">
			<map>
				<entry key="extends" value-ref='extendsDirective'></entry>
				<entry key="override" value-ref='overrideDirective'></entry>
				<entry key="block" value-ref='blockDirective'></entry>
				<entry key="super" value-ref='superDirective'></entry>
			</map>
		</property>
	</bean>
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="requestContextAttribute" value="request" />
		<property name="suffix" value=".ftl"/>
		<property name="contentType" value="textml;charset=UTF-8"></property>
	</bean>
	
	<!-- 文件上传支持 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!--max size: 10M -->
		<property name="maxUploadSize" value="10485760" />
	</bean>	
	
	<!-- spring mvc 拦截器配置 -->	
	<!-- mvc静态资源映射 -->
	<mvc:resources mapping="/static/**" location="/static/"/>	
	<mvc:interceptors>  
	    <mvc:interceptor>    
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller --> 	        
	        <mvc:mapping path="/**" /> 
	        <mvc:exclude-mapping path="/common/login" />  
	        <mvc:exclude-mapping path="/static/**" />   
	        <bean class="GridCP.core.controller.common.CommonInterceptor"></bean>   	        
	    </mvc:interceptor>  
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
  </mvc:interceptors> 
	
     			
</beans>